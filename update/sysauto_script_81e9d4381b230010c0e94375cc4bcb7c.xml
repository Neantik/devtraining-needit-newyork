<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition/>
        <conditional>false</conditional>
        <name>Find NeedIt Tasks Due Soon</name>
        <run_as display_value="Anton Bielov">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2020-03-11 20:26:47</run_start>
        <run_time>1970-01-01 07:05:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[// Get today's time and date
	var rightNow = new GlideDateTime();

	// Query the database for NeedIt Task records with Due date field values older
	// than the current time.  Only return NeedIt Task records that do not have
	// a State field value of Closed Complete.
/*	var overdueNITasks = new GlideRecord('x_58872_needit_needit_task');
	overdueNITasks.addQuery('due_date','>=',rightNow);
	//overdueNITasks.addQuery('due_date','<',gs.hoursAgo(-24));
	rightNow.addDaysLocalTime(1);
	overdueNITasks.addQuery('due_date','<',rightNow);
	overdueNITasks.addQuery('state','!=',3);
	
	overdueNITasks.query();
	// Write a log message for each overdue NeedIt Task Record
	while(overdueNITasks.next()){
		gs.info("NEW Overdue Task = " + overdueNITasks.number + "__");
				
	}*/
	var dueSoonNITasks = new GlideRecord('x_58872_needit_needit_task');
	//overdueNITasks.addQuery('due_date','>=',rightNow);
	//overdueNITasks.addQuery('due_date','<',gs.hoursAgo(-24));
	//rightNow.addDaysLocalTime(1);
	//overdueNITasks.addQuery('due_date','state');
	//overdueNITasks.addQuery('state','!=',3);
	
	dueSoonNITasks.query();
	
	// Write a log message for each overdue NeedIt Task Record
	while(dueSoonNITasks.next()){
		if ((dueSoonNITasks.due_date >= rightNow) && (dueSoonNITasks.due_date < gs.hoursAgo(-24)) && (dueSoonNITasks.state != 3)) 	{
			gs.info("NEW OVERDUE TASK = " + dueSoonNITasks.number);
			gs.eventQueue('x_58872_needit.dueSoonNeedItTasks', dueSoonNITasks, dueSoonNITasks.number, gs.getUserName());
		}
	}



]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-03-11 20:47:16</sys_created_on>
        <sys_id>81e9d4381b230010c0e94375cc4bcb7c</sys_id>
        <sys_mod_count>47</sys_mod_count>
        <sys_name>Find NeedIt Tasks Due Soon</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sysauto_script_81e9d4381b230010c0e94375cc4bcb7c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-03-11 23:18:30</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
